# Modified from https://github.com/libgdx/libgdx/blob/master/.github/workflows/build-publish.yml

name: Build natives

on:
  workflow_dispatch:
    branches: [ main ]

env:
  MACOSX_DEPLOYMENT_TARGET: "10.10"

jobs:
  apple-natives:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build natives
        run: |
          ./gradlew jniGen jnigenBuildMacOsX64
      - name: Upload macOS/iOS natives
        uses: actions/upload-artifact@v2.1.4
        with:
          name: apple-natives
          path: libs
  most-natives:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install cross-compilation toolchains
        run: |
          sudo apt install -y --force-yes gcc g++ linux-libc-dev libc6-dev
          sudo apt install -y --force-yes libc6-dev-i386 lib32stdc++-9-dev
          sudo apt install -y --force-yes libstdc++-9-dev-i386-cross libstdc++-9-dev-arm64-cross libstdc++-9-dev-armhf-cross
          sudo apt install -y --force-yes gcc-i686-linux-gnu g++-i686-linux-gnu libc6-dev-i386-cross
          sudo apt install -y --force-yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
          sudo apt install -y --force-yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross
          sudo apt install -y --force-yes mingw-w64 lib32z1
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build natives
        run: |
          export export NDK_HOME=$ANDROID_NDK_HOME
          ./gradlew jniGen jnigenBuildAndroid jnigenBuildLinux jnigenBuildLinux64 jnigenBuildLinuxARM jnigenBuildLinuxARM64 jnigenBuildWindows jnigenBuildWindows64
      - name: Upload all output libs
        uses: actions/upload-artifact@v2.1.4
        with:
          name: most-natives
          path: libs
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
  pack-natives:
    needs:
      - apple-natives
      - most-natives
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-      - name: Download natives-ios artifact
      - name: Download apple-natives artifact
        uses: actions/download-artifact@v2
        with:
          name: apple-natives
          path: libs
      - name: Download most-natives artifact
        uses: actions/download-artifact@v2
        with:
          name: most-natives
          path: libs
      - name: Pack desktop natives
        run: |
          ./gradlew jniGen
          ant -f jni/build.xml pack-natives
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: natives
          path: libs
      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew publish